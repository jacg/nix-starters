name: Test
on:
  pull_request:
  push:
jobs:

  Rust:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow-fail }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-12]
        allow-fail: [false]
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-23.05
      - uses: Swatinem/rust-cache@v2.7.3
      - name: Test in nix-shell
        run: nix-shell rust/shell.nix --run "cd rust && cargo test --color=always"
      - name: Test in nix develop
        run: cd rust && nix --extra-experimental-features nix-command --extra-experimental-features flakes develop -c cargo test --color=always

  Python:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow-fail }}
    env:
      EXPECTED_PY: ${{ matrix.py }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-12]
        py: [python39, python310, python311]
        allow-fail: [false]
        include:
          - os: ubuntu-latest
            py: python312
            allow-fail: true
          - os: macos-12
            py: python312
            allow-fail: true
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-23.05
      - name: Test in nix develop
        run: cd python && nix --extra-experimental-features nix-command --extra-experimental-features flakes develop .#${{ matrix.py }} -c pytest --color=yes -v

  Python-flake-compat:
    if: "! contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allow-fail }}
    env:
      EXPECTED_PY: ${{ matrix.py }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-12]
        py: [python311]
        allow-fail: [false]
    steps:
      - uses: actions/checkout@v3.5.2
      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-23.05
      - name: Test in nix-shell
        run: nix-shell python/shell.nix --argstr py ${{ matrix.py }} --run 'cd python && pytest --color=yes -v'

# TODO Rust bindgen
# TODO Rust PyO3
# TODO home manager
# TODO C++ with clang support
